CSCC01 Deliverable 5 Marking Guide
-----------------------------------
Team: T25 Jelly
Total: 70/110


Project Management:  __________ (15/20%)

  Release plan: 1/3
    * -1 Is this the expected, or historical release plan?
      * Oct 31 - Nov 7 has no hours burned.
    * -1 What are the sprints related to each release?
    - each release corresponds to end of Sprint
    - project fully laid out:
      for each release date, list of user stories to implement
    - project velocity specified and used
    - highest priority user stories first modulo dependencies
    - reasonable goals for each release

  Product Backlog: 1/3
    * -1 some stories can still be improved. See D2 feedback.
      * e.g. 1, 3, 6
    * -1 Release plan shows up to 19 stories, but not seen here?
    - user stories follow the correct format.
    - user stories, together, reflect all the user requirements (from
      all personas).
    - user stories correspond to actual requirements (no "invented"
      features).
    - user stories contain enough information for devs to estimate how
      long it would take to implement it.
    - each user story addresses one specific requirement (no "world
      peace" stories).

  Sprint Backlog(s): 2/2
    - user stories taken from the Product Backlog
    - estimated costs
    - estimated values

  Sprint Plan(s): 3/3
    - user stories divided into tasks when appropriate.
    - each Sprint Plan contains all the necessary information:
      who is working on which task on which day
    - sum of costs of user stories in the sprint = project velocity
    - good planning decisions

  Use of Task Board: 2/2
    - correct format of task boards
    - snapshots in the begginning and end of each Sprint are provided

  Use of Burndown Charts: 2/3
    *-1 Plans say 6 sprints, but chart for sprint 6 not shown?
    - snapshots in the begginning and end of each Sprint are provided
    - correctness of burndown charts

  Use of Repo: 2/2
    (including good use of branching from now on!)

  Use of communication tools: 2/2
    - evidence of using communication tools of their choice effectively


Design and Implementation:  __________ (26/50%)

  System Design: 7/10
    * -1 Cannot tell how system will handle merging from multiple sources.
    * -2 Need to show more of component design. Methods, functions, object
      relationships, etc.
    - good modular design
    - general and easy to extend
    - it is clear how the current implementation is going to be
      extended should the requirements evolve

  Implementation: 19/40
    * -1 'extract -l' does not work.
    * -1 Have to repeatedly enter credentials.
    * -1 Should notify user with something like "Working..." on operations that
      take a long time. (i.e. running a big extract)
    * -1 No user-friendly way of verifying and approving long list of changes.
    * -2 Last update date is modified even if commit failed.
    * -2 Branch not managed by system, have to manually manage.
    * -3 Commit only contains additions, no updates on existing fields.
      * Diff-log is all green
    * -5 Not working w/ pull requests.
    * -5 No option to schedule update cycles.
    - 0 marks if it doesn't run
    - all of the features are fully implemented
    - quality and maturity of code


Verification and Validation:  __________ (13/20%)

  - quality of unit tests: 3/6
    * -2 Greatly lacking coverage.
    * -1 Redundancy: Tests cover more than the unit under test, or the condition
      being tested.
      * i.e. test_compare(). Should have one entire suite dedicated to cmp().
    - good coverage
    - no redundancy

  - code review activities and outcomes: 7/10
    * -1 Same format/checklist not followed!
    * -1 Comments need more specifics. Location/suggestion/recommendations?
    * -1 Video: Better than D4, but there needs to be less presenting, and more
      communication.
    - each review follows a checklist (not necessarily the example one, but the
      same checklist for all)
    - each review is thorough
    - evidence of addressing the outcomes of the review
    - the video demonstrates an effective process used for the review/collection
      meeting

  - validation activities and outcomes: 3/4
    * -1 Be more specific, what was one of the blocking issues that was resolved
      via this process?
    - evidence of feedback from the user
    - evidence of addressing feedback from the user


Report: __________ (8/10%)
  * -2 README: No instructions on how to setup with OEC repo.
  - well-presented, is easy to read and to navigate
  - spelling and grammar
  - looks professional
  - quality of the README file


Interview: ________ (8/10%)
  * -1 Lateness
  * -1 Team helped in answering some questions during demo.
